buildscript {
    repositories {
        jcenter()
        maven { url = "https://files.minecraftforge.net/maven" }
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = 'SpongePowered'
            url = 'http://repo.spongepowered.org/maven'
        }

    }

    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.4-SNAPSHOT'
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.4'
    }

}


allprojects {
    repositories {
        maven {
            name = 'spongepowered-repo'
            url = 'http://repo.spongepowered.org/maven/'
        }
        maven { url 'https://jitpack.io' }
        mavenCentral()
        jcenter()
    }
}


apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven'


version = "1.0.0"
group = "java.omegadevs" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "omega_utility"

sourceCompatibility = targetCompatibility = '1.8'


minecraft {
    version = "1.12.2-14.23.5.2838"
    runDir = "run"
    mappings = "snapshot_20171003"
}


task moveLibraryModToMods(type: Copy) {
    dependsOn build
    from configurations.runtime
    include 'McDevLib*.jar'
    into 'mods'
}

dependencies {

    compile 'com.github.WalkingLibrary:Dev-Lib:1.1.0'
    compile 'com.github.WalkingLibrary:McDevLib:1.0.2'
    compile 'com.github.classgraph:classgraph:28b32ec'
    compile 'org.spongepowered:spongeapi:8.0.0-SNAPSHOT'
    compile("org.spongepowered:mixin:0.7.11-SNAPSHOT")
            {
                exclude module: "launchwrapper"
            }
}


reobf {
    shadowJar {
        mappingType = 'SEARGE'
        classpath = sourceSets.main.compileClasspath
    }
}


shadowJar {
    dependencies {
        include(dependency('org.spongepowered:mixin'))
        include(dependency('com.github.WalkingLibrary:Dev-Lib:1.1.0'))
        include(dependency('com.github.WalkingLibrary:McDevLib:1.0.2'))
        include(dependency('com.github.classgraph:classgraph:28b32ec'))
    }
    exclude 'dummyThing'
    exclude 'LICENSE.txt'
    classifier = 'final'
}

build.dependsOn(shadowJar)

jar {
    manifest {
        attributes(
                "tweakClass": 'org.spongepowered.asm.launch.MixinTweaker',
                "TweakOrder": 0,
                'FMLCorePluginContainsFMLMod': 'true',
                'FMLCorePlugin': 'com.mixin.Core',
                'ForceLoadAsMod': 'true',
                'FMLAT': 'mcdevlib_at.cfg'
        )
    }
}

mixin
        {
            defaultObfuscationEnv notch
            add sourceSets.main, "mixinsDev.json.refmap.json"
        }


processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}




